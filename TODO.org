* TODO Documentation
* TODO Module structure
  - gradle is fine
  - qont: Only shift/reset implementation
    - net.exfalso.qont
  - monad-X: implementation of X
    - net.exfalso.monad.X
    - should be typesafe
* Testing
** TODO Unit tests?
** TODO Random generator
* TODO CI
  - Nixos fo sho. Ask Niklas?
* TODO Blog?
  - Need to learn how to typeset and edit and shit
* Monads
  - Separate documentation/testing for each
** TODO Think about abstracting interface. Is this possible? Needed? Think sequence, liftM and friends
** TODO List
   - Check list comprehension apis. Is it just MonadPlus?
** TODO STM
** TODO Parser combinator (infinite backtracking at first)
** TODO Streaming (check conduit). Qonduit. omg. genius
   - Utilities for Iterable/Stream shenanigans
** TODO Quickcheck
   - Add biased generators, multithreading, stuff missing from hs quickcheck
** TODO Cont on top of shift/reset? lol
* TODO Investigate suspendable lambdas some more
* TODO Investigate typesafe shift/reset
  - How to scope shift properly?
* TODO Performance tests
** TODO Profile what's taking longest
** DONE Does the jump to yield double-throw? Can we jump more directly?
** TODO Could construct a non-quasar stack based state machine based on
    the Shift/Reset test generator for comparison
** TODO Compare parser combinators with other stuff like kryo? Is that a fair comparison?
** TODO Compare InputStream/OutputStream fusion to qonduit
